const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));
module.exports = { //each command is wrapped in module.exports object
    command : "crypto", //for name of the command
    description: "–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–Ω—é—é —Ü–µ–Ω—É –∫—Ä–∏–ø—Ç—ã –≤ USDT", //for help
    /**
    * param for telegraf's syntax without requiring it here.
    * @param {import("telegraf").Context} ctx
    */
    run: async (ctx) => { //main function
        const quotes = [
            '–í–†–ï–ú–Ø –ü–ê–ú–ü–ò–¢–¨!',
            '–í–†–ï–ú–Ø –î–ê–ú–ü–ò–¢–¨!',
            'HODLHODLHODLHODL',
            '–ö–∞–∫ –¥–µ–ª–∞ –Ω–∞ —Ä–∞–±–æ—Ç–∫–µ, —Ä–∞–±–æ—Ç—è–≥–∏?',
            '–ß—Ç–æ —Å –ª–∏—Ü–æ–º, –∫—Ä–∏–ø—Ç–æ–∏–Ω–≤–µ—Å—Ç–æ—Ä—ã?',
            'pink_wojak.jpg',
            '–°–º–µ—à–Ω–∞—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–æ–Ω–µ—Ç–∞ moment',
            '–ú–û–©–ù–û.',
            "We're all gonna make it",
            'üóø',
            'üóøüóø',
            'üóøüóøüóø'
        ]
        let args = ctx.update.message.text.split(' ').slice(1)
        let crypto = "BTC"
        if(args.length!=0){crypto = args.join().toUpperCase()}
        fetch(`https://api.binance.com/api/v3/ticker/price?symbol=${crypto}USDT`)
        .then((response) => {
            return response.json();
        })
        .then((data) => {
            if(!data.price){ ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é –ø–∏—Å–∞–Ω–∏–Ω—É'); return;} 
            ctx.replyWithMarkdownV2('``` Price of $'+crypto+' in USDT: '+data.price+'```\n ` '+quotes[Math.floor(Math.random()*quotes.length)]+' `')
        });
    },
}